---

# Swap

- name: Disable swapoff
  become: yes
  shell: swapoff -a

- name: Disable swapoff permanently
  become: yes
  replace:
    path: /etc/fstab
    regexp: '^(\s*)([^#\n]+\s+)(\w+\s+)swap(\s+.*)$'
    replace: '#\1\2\3swap\4'
    backup: yes

# ContainerD

- name: Create an empty file for the containerd module
  copy:
    content: ""
    dest: /etc/modules-load.d/containerd.conf
    force: no

- name: Configure modules for containerd
  blockinfile:
    path: /etc/modules-load.d/containerd.conf
    block: |
      overlay
      br_netfilter

# K8s prerequisit

- name: Create an empty file for Kubernetes sysctl params
  copy:
    content: ""
    dest: /etc/sysctl.d/99-kubernetes-cri.conf
    force: no

- name: Configure sysctl params for Kubernetes
  lineinfile:
    path: /etc/sysctl.d/99-kubernetes-cri.conf
    line: "{{ item }}"
  with_items:
    - 'net.bridge.bridge-nf-call-iptables  = 1'
    - 'net.ipv4.ip_forward                 = 1'
    - 'net.bridge.bridge-nf-call-ip6tables = 1'

- name: Apply sysctl params without reboot
  command: sysctl --system

## Install

# - name: Create keyring directory
#   file:
#     path: /etc/apt/keyrings
#     owner:owner: "ubuntu"
#     group: "ubuntu"
#     mode: 0755

# - name: Add GPG key for kubeadm
#   shell: curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.33/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg

# - name: chmod GPG key for kubeadm
#   shell: sudo chmod 644 /etc/apt/keyrings/kubernetes-apt-keyring.gpg # allow unprivileged APT programs to read this keyring

- name: Add kubernetes apt repository
  shell: echo 'deb https://pkgs.k8s.io/core:/stable:/v1.33/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list

- name: chmod kubernetes apt repository
  shell: sudo chmod 644 /etc/apt/sources.list.d/kubernetes.list   # helps tools such as command-not-found to work correctly

- name: Update apt
  apt:
    update_cache: yes

- name: apt install kubeadm, kubelet and kubectl
  apt:
    name: "{{ packages }}"
    state: present
  vars:
    packages:
      - kubeadm
      - kubelet
      - kubectl
      - containerd.io

- name: create Containerd directory
  file:
    path: /etc/containerd
    state: directory

- name: add Containerd configuration
  shell: /usr/bin/containerd config default > /etc/containerd/config.toml

- name: configuring the systemd cgroup driver for Containerd
  lineinfile:
    path: /etc/containerd/config.toml
    regexp: 'SystemdCgroup = false'
    line: 'SystemdCgroup = true'

- name: enable the Containerd service and start it
  systemd:
    name: containerd
    state: restarted
    enabled: yes
    daemon-reload: yes

- name: enable the Kubelet service, and enable it persistently
  service:
    name: kubelet
    enabled: yes

- name: load br_netfilter kernel module
  modprobe:
    name: br_netfilter
    state: present

- name: set bridge-nf-call-iptables
  sysctl:
    name: net.bridge.bridge-nf-call-iptables
    value: 1

- name: set ip_forward
  sysctl:
    name: net.ipv4.ip_forward
    value: 1
